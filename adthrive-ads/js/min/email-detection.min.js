!function(){"use strict";const t={adt_ei:{identityApiKey:"plainText",source:"url",type:"plaintext",priority:1},adt_eih:{identityApiKey:"sha256",source:"urlh",type:"hashed",priority:2},sh_kit:{identityApiKey:"sha256",source:"urlhck",type:"hashed",priority:3}},e=Object.keys(t);function i(t){const e=t.match(/((?=([a-z0-9._!#$%+^&*()[\]<>-]+))\2@[a-z0-9._-]+\.[a-z0-9._-]+)/gi);return e?e[0]:""}function n(t){return i(a(t.toLowerCase()))}function a(t){return t.replace(/\s/g,"")}function o(t,e){const i=new URL(e);t.forEach(t=>i.searchParams.delete(t)),history.replaceState(null,"",i.toString())}var r={checkEmail:i,validateEmail:n,trimInput:a,removeQueryParamsAndUpdateHistory:o,detectEmails:async function(){const i=new URL(window.location.href),a=i.searchParams;let r=null;const c=Object.entries(t).sort(([,t],[,e])=>t.priority-e.priority).map(([t])=>t);for(const e of c){const i=a.get(e),o=t[e];if(!i||!o)continue;const c=decodeURIComponent(i),d="plaintext"===o.type&&n(c),s="hashed"===o.type&&c;if(d||s){r={value:c,config:o};break}}if(r){const{value:t,config:e}=r;window.adthrive=window.adthrive||{},window.adthrive.cmd=window.adthrive.cmd||[],window.adthrive.cmd.push((function(){window.adthrive.identityApi({source:e.source,[e.identityApiKey]:t},({success:i,data:n})=>{i?window.adthrive.log("info","Plugin","detectEmails",`Identity API called with ${e.type} email: ${t}`,n):window.adthrive.log("warning","Plugin","detectEmails",`Failed to call Identity API with ${e.type} email: ${t}`,n)})}))}o(e,i)},cb:"adthrive"};const{detectEmails:c,cb:d}=r;c()}();
